---
name: mytaskflow
graphs:
  start:
    - type: IntRange
      from: 1
      to: 1
      output: int
      collect: "False"
      streamTarget: A

  A: [{type: IntToString, integer: "{int}", string: i}, {type: Pipe, pipeTargets: [B, C]}]
  B: [{type: Retry, retryTarget: E1}]
  E1: [{type: HttpRequest, url: "?page={i}", put: response}]

  C:
    - type: Regex
      content: "{response}"
      regex: "notimportant"
      output: output
      groups:
    - type: Map
      putElement: e
      list: "{output}"
      mapTarget: D


  D:
    - type: Echo
      put: "gid"
      value: "{{e}@gid}"
    - {type: Fork, forkTargets: [E, F]}

  E:
    - type: FileExists
      path: "path/{{e}@gid}.{{e}@format}"
    - type: IfThenElse
      condition: "{exists}"
      falseTarget: G

  G:
    - type: Retry
      retryTarget: H

  H:
    - type: HttpRequest
      url: "{{e}@tUrl}"
      put: thumbContent
      expectedResponse: FILE
      path: "path/{{e}@gid}.{{e}@format}"


  F:
    - type: FileExists
      path: "path/{{e}@gid}.json"
    - type: IfThenElse
      condition: "{exists}"
      falseTarget: I

  I: [{type: Retry, retryTarget: J}]

  J:
    - type: HttpRequest
      url: "?{{e}@gid}/"

    - type: Regex
      content: "{response}"
      collect: true
      output: output2
      regex: "notimportant"
      groups:

    - type: Map
      list: "{output2}"
      mapTarget: K

  K:
    - type: JsonStringToObject
      jsonString: "{{element}@json}"
      jsonObject: "json"

    - type: CleanJsonObject
      jsonObject: "{json}"
      cleanedObject: "jsonclean"
      clean: [] # not important

    - type: ObjectToJsonString
      object: "{jsonclean}"
      result: "jsonstr"

    - type: WriteLineToFile
      output: "path/{gid}.json"
      line: "{jsonstr}"
      overwrite: true
