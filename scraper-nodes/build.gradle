subprojects.each {
    def plugin = it.name
    project(':scraper-app') {
        dependencies {
            // for runtime
            runtimeOnly project(":scraper-nodes:${plugin}")
        }
    }

    dependencies {
        // for core parser
        implementation project(':scraper-plugins:scraper-plugins-core')

//        // for core type checker
//        testImplementation project(':scraper-plugins:scraper-plugins-core')
    }
}

subprojects {
    apply plugin: 'java-library'
    sourceCompatibility = 1.11

    // repository configuration
    repositories {
        mavenCentral()
        jcenter()
    }


    apply from: '../gradle/gradle-module-fix.gradle'
    apply from: '../../gradle/gradle-test-resources-fix.gradle'

    tasks.withType(Jar) {
        destinationDirectory = file("$rootDir/build/libs/nodes-only")
    }

    configurations {
        provided
        api.extendsFrom provided
    }

    dependencies {
        // core api + transitive dependencies
        implementation project(':scraper-core')
        implementation project(':scraper-utils')
    }

    task bundleDependenciesOnly(type: Jar) {
        from { configurations.provided.collect { it.isDirectory() ? it : zipTree(it) } }
        destinationDirectory = file("$rootDir/build/libs/nodes-dependencies")
//        with jar
    }

    task bundleNode(type: Jar) {
        from { configurations.provided.collect { it.isDirectory() ? it : zipTree(it) } }
        destinationDirectory = file("$rootDir/build/libs/nodes-bundled")
        with jar
    }
}
